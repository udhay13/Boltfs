apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.cookpad.android.plugin.license-tools'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.yanzhenjie.andserver'

android {
    compileSdkVersion 30

    buildFeatures {
        dataBinding true
    }

    signingConfigs {
        gbDistribution {
            // In the root folder of the project, you can find the template properties file
            // named 'signing.properties.txt'. Rename it to 'signing.properties' to make use of it
            def signingPropertiesFile = project.rootProject.file('signing.properties')

            if (signingPropertiesFile.exists()) {
                Properties signingProperties = new Properties()
                signingProperties.load(signingPropertiesFile.newDataInputStream())

                storeFile file(signingProperties.getProperty('signing.storeFile'))
                keyAlias signingProperties.getProperty('signing.keyAlias')
                storePassword signingProperties.getProperty('signing.storePassword')
                keyPassword signingProperties.getProperty('signing.keyPassword')
            }
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId "org.monora.uprotocol.client.android"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 105
        versionName "1.0.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary = true
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
        }
    }

    flavorDimensions 'mode'

    productFlavors {
        fossReliant {
            applicationId = 'com.genonbeta.TrebleShot'
            dimension 'mode'
            signingConfig signingConfigs.gbDistribution
        }

        googlePlay {
            applicationId = 'com.genonbeta.TrebleShot'
            dimension 'mode'
            signingConfig signingConfigs.gbDistribution
        }
    }
}

task copyHebrewResources(type: Copy) {
    // this task copies Hebrew related resources to a folder with iw alias
    // If it is causing issues, removing will only affect Hebrew resources
    // https://github.com/genonbeta/TrebleShot/issues/67 #67

    File mergedResourcesDir = new File("${buildDir}/mergedResources")

    if (!mergedResourcesDir.isDirectory())
        mergedResourcesDir.mkdirs()

    for (String resEach : android.sourceSets.main.res.srcDirs) {
        File currentFolder = new File(resEach)

        for (File folderContents : currentFolder.listFiles()) {
            if (folderContents.name.endsWith("-he")) {
                String iwNamedFolder = "${folderContents.name.substring(0, folderContents.name.lastIndexOf("-he"))}-iw"

                from folderContents.path
                into "${mergedResourcesDir.path}/${iwNamedFolder}"
                println("Copying resource ${folderContents.path}")
            }
        }
    }

    println("Adding merged resource directories to the resources array ${mergedResourcesDir.path}")
    android.sourceSets.main.res.srcDirs += mergedResourcesDir.path
}

preBuild.dependsOn copyHebrewResources

dependencies {
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.3'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':core')
    implementation project(':zxing')
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.collection:collection-ktx:1.1.0'
    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.room:room-ktx:2.3.0'
    implementation 'androidx.room:room-runtime:2.3.0'
    kapt 'androidx.room:room-compiler:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'com.madgag.spongycastle:bcpkix-jdk15on:1.58.0.0'
    implementation 'org.monora.uprotocol:core:0.1.0-ALPHA35'
    implementation 'org.apache.maven:maven-artifact:3.8.1'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation 'com.yanzhenjie.andserver:api:2.1.9'
    kapt 'com.yanzhenjie.andserver:processor:2.1.9'
    kapt 'androidx.annotation:annotation:1.2.0'
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    googlePlayImplementation 'com.anjlab.android.iab.v3:library:1.0.44' // Do not update
    implementation 'com.google.zxing:core:3.3.0' // Needed because 'zxing' module won't export it. Do not update!
    implementation "io.noties.markwon:core:4.6.2"
}

repositories {
    mavenCentral()
}
